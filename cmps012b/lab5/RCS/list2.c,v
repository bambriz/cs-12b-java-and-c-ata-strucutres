head	1.1;
access;
symbols;
locks;
comment	@ * @;


1.1
date	2013.11.07.11.32.47;	author -;	state -;
branches;
next	;


desc
@@


1.1
log
@-
@
text
@// $Id: list2.c,v 1.2 2013-10-16 12:27:01-07 - - $

 #include <assert.h>
 #include <stdio.h>
 #include <stdlib.h>
 typedef struct node node;
 struct node {
    char *word;
       node *link;
       };

   int main (int argc, char **argv) {
      node *head;
        for (int argi = 0; argi < 5; ++argi) {
            node *node = malloc (sizeof (struct node));
                 assert (node != NULL);
                  node->word = argv[argi];
                   node->link = head;
                    head = node;
             }
               for (node *curr = head; curr->link != NULL; curr = curr->link) {
                    printf ("%p->node {word=%p->[%s], link=%p}\n",
                       curr, curr->word, curr->word, curr->link);
                    }
             return 9;
         }
@
