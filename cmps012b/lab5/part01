Script started on Thu 07 Nov 2013 02:48:32 AM PST
You are currently using 31% (151.7 MiB) of your 488.3 MiB quota.
]0;bambriz@unix1:lab5[bambriz@unix1 lab5]$ mk uninit.c
CSOURCE=uninit.c EXECBIN=uninit
+ cid + uninit.c
+ checksource uninit.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 uninit.c -o uninit -lm
uninit.c: In function â€˜mainâ€™:
uninit.c:6: warning: unused parameter â€˜argcâ€™
uninit.c:6: warning: unused parameter â€˜argvâ€™
uninit.c:8: warning: â€˜fooâ€™ is used uninitialized in this function
uninit.c:10: warning: â€˜pointerâ€™ is used uninitialized in this function
+ set +x
============================================================
]0;bambriz@unix1:lab5[bambriz@unix1 lab5]$ valgrind uninit
==15032== Memcheck, a memory error detector
==15032== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==15032== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==15032== Command: uninit
==15032== 
==15032== Use of uninitialised value of size 8
==15032==    at 0x3710E43D5B: _itoa_word (in /lib64/libc-2.12.so)
==15032==    by 0x3710E46912: vfprintf (in /lib64/libc-2.12.so)
==15032==    by 0x3710E4F449: printf (in /lib64/libc-2.12.so)
==15032==    by 0x400519: main (uninit.c:8)
==15032== 
==15032== Conditional jump or move depends on uninitialised value(s)
==15032==    at 0x3710E43D65: _itoa_word (in /lib64/libc-2.12.so)
==15032==    by 0x3710E46912: vfprintf (in /lib64/libc-2.12.so)
==15032==    by 0x3710E4F449: printf (in /lib64/libc-2.12.so)
==15032==    by 0x400519: main (uninit.c:8)
==15032== 
==15032== Conditional jump or move depends on uninitialised value(s)
==15032==    at 0x3710E453A3: vfprintf (in /lib64/libc-2.12.so)
==15032==    by 0x3710E4F449: printf (in /lib64/libc-2.12.so)
==15032==    by 0x400519: main (uninit.c:8)
==15032== 
==15032== Conditional jump or move depends on uninitialised value(s)
==15032==    at 0x3710E453C1: vfprintf (in /lib64/libc-2.12.so)
==15032==    by 0x3710E4F449: printf (in /lib64/libc-2.12.so)
==15032==    by 0x400519: main (uninit.c:8)
==15032== 
7
==15032== Use of uninitialised value of size 8
==15032==    at 0x40051E: main (uninit.c:10)
==15032== 
==15032== Invalid read of size 4
==15032==    at 0x40051E: main (uninit.c:10)
==15032==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==15032== 
==15032== 
==15032== Process terminating with default action of signal 11 (SIGSEGV)
==15032==  Access not within mapped region at address 0x0
==15032==    at 0x40051E: main (uninit.c:10)
==15032==  If you believe this happened as a result of a stack
==15032==  overflow in your program's main thread (unlikely but
==15032==  possible), you can try to increase the size of the
==15032==  main thread stack using the --main-stacksize= flag.
==15032==  The main thread stack size used in this run was 10485760.
==15032== 
==15032== HEAP SUMMARY:
==15032==     in use at exit: 0 bytes in 0 blocks
==15032==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==15032== 
==15032== All heap blocks were freed -- no leaks are possible
==15032== 
==15032== For counts of detected and suppressed errors, rerun with: -v
==15032== Use --track-origins=yes to see where uninitialised values come from
==15032== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 6 from 6)
Segmentation fault (core dumped)
]0;bambriz@unix1:lab5[bambriz@unix1 lab5]$ echo $?
139
]0;bambriz@unix1:lab5[bambriz@unix1 lab5]$ pstatus 139
pstatus: 0x008B TERMINATED 11: Segmentation fault (core dumped)
]0;bambriz@unix1:lab5[bambriz@unix1 lab5]$ exit
exit

Script done on Thu 07 Nov 2013 02:49:16 AM PST
